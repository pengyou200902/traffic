<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.districompu.traffic.dao.ViolationRecordsMapper" >
  <resultMap id="BaseResultMap" type="com.districompu.traffic.model.ViolationRecords" >
    <id column="record_id" property="recordId" jdbcType="VARCHAR" />
    <result column="recorder_id" property="recorderId" jdbcType="VARCHAR" />
    <result column="plate" property="plate" jdbcType="VARCHAR" />
    <result column="owner_id" property="ownerId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="cost" property="cost" jdbcType="SMALLINT" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    record_id, recorder_id, plate, owner_id, type, content, cost, state, region, time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.districompu.traffic.model.ViolationRecordsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from violation_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from violation_records
    where record_id = #{recordId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from violation_records
    where record_id = #{recordId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.districompu.traffic.model.ViolationRecordsExample" >
    delete from violation_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.districompu.traffic.model.ViolationRecords" >
    insert into violation_records (record_id, recorder_id, plate, 
      owner_id, type, content, 
      cost, state, region, time
      )
    values (#{recordId,jdbcType=VARCHAR}, #{recorderId,jdbcType=VARCHAR}, #{plate,jdbcType=VARCHAR}, 
      #{ownerId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{cost,jdbcType=SMALLINT}, #{state,jdbcType=BIT}, #{region,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.districompu.traffic.model.ViolationRecords" >
    insert into violation_records
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        record_id,
      </if>
      <if test="recorderId != null" >
        recorder_id,
      </if>
      <if test="plate != null" >
        plate,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="time != null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="recorderId != null" >
        #{recorderId,jdbcType=VARCHAR},
      </if>
      <if test="plate != null" >
        #{plate,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=SMALLINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.districompu.traffic.model.ViolationRecordsExample" resultType="java.lang.Integer" >
    select count(*) from violation_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update violation_records
    <set >
      <if test="record.recordId != null" >
        record_id = #{record.recordId,jdbcType=VARCHAR},
      </if>
      <if test="record.recorderId != null" >
        recorder_id = #{record.recorderId,jdbcType=VARCHAR},
      </if>
      <if test="record.plate != null" >
        plate = #{record.plate,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null" >
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.cost != null" >
        cost = #{record.cost,jdbcType=SMALLINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=BIT},
      </if>
      <if test="record.region != null" >
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update violation_records
    set record_id = #{record.recordId,jdbcType=VARCHAR},
      recorder_id = #{record.recorderId,jdbcType=VARCHAR},
      plate = #{record.plate,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      cost = #{record.cost,jdbcType=SMALLINT},
      state = #{record.state,jdbcType=BIT},
      region = #{record.region,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.districompu.traffic.model.ViolationRecords" >
    update violation_records
    <set >
      <if test="recorderId != null" >
        recorder_id = #{recorderId,jdbcType=VARCHAR},
      </if>
      <if test="plate != null" >
        plate = #{plate,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=SMALLINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="region != null" >
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.districompu.traffic.model.ViolationRecords" >
    update violation_records
    set recorder_id = #{recorderId,jdbcType=VARCHAR},
      plate = #{plate,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=SMALLINT},
      state = #{state,jdbcType=BIT},
      region = #{region,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where record_id = #{recordId,jdbcType=VARCHAR}
  </update>
</mapper>